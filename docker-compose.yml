version: '3.8'

services:
  # Krakend Gateway
  krakend:
    image: krakend:2.9.3
    ports:
      - "8080:8080"
    volumes:
      - ./krakend/krakend.json:/etc/krakend/krakend.json
    command: ["run", "-c", "/etc/krakend/krakend.json"]
    depends_on:
      - profile-service
      - store-of-value-service
      - payment-service
      - events-service

  # Banking Dashboard (React)
  banking-dashboard:
    build:
      context: ./banking-dashboard
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    depends_on:
      - krakend

  # Redis Service
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass password
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # AMQP protocol port
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_LOAD_DEFINITIONS: /etc/rabbitmq/definitions.json
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Profile Service
  profile-service:
    build:
      context: ./profile-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SERVER_PORT=8081
      - SPRING_DATASOURCE_URL=jdbc:postgresql://profile-db:5432/profiledb
      - SPRING_DATASOURCE_USERNAME=profile_user
      - SPRING_DATASOURCE_PASSWORD=profile_password
      - SPRING_SHOW_SQL=false
      - JWT_SECRET=YourVeryLongAndSecureSecretKeyHere_Replace_This_With_Actual_Secret
      - JWT_EXPIRATION=86400000
    depends_on:
      - profile-db

  # Profile Database
  profile-db:
    image: postgres:14
    container_name: profile-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: profiledb
      POSTGRES_USER: profile_user
      POSTGRES_PASSWORD: profile_password
    volumes:
      - profile-data:/var/lib/postgresql/data

  # Store of Value Service
  store-of-value-service:
    build:
      context: ./store-of-value-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - SERVER_PORT=8083
      - SPRING_DATASOURCE_URL=jdbc:postgresql://accounts-db:5432/accountsdb
      - SPRING_DATASOURCE_USERNAME=accounts_user
      - SPRING_DATASOURCE_PASSWORD=accounts_password
      - SPRING_SHOW_SQL=false
      - JWT_SECRET=YourVeryLongAndSecureSecretKeyHere_Replace_This_With_Actual_Secret
      - JWT_EXPIRATION=86400000
    depends_on:
      - accounts-db

  # Accounts Database
  accounts-db:
    image: postgres:14
    container_name: accounts-db
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: accountsdb
      POSTGRES_USER: accounts_user
      POSTGRES_PASSWORD: accounts_password
    volumes:
      - accounts-data:/var/lib/postgresql/data

  # Payment Service
  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - SERVER_PORT=8082
      - SPRING_DATASOURCE_URL=jdbc:postgresql://transactions-db:5432/transactionsdb
      - SPRING_DATASOURCE_USERNAME=transactions_user
      - SPRING_DATASOURCE_PASSWORD=transactions_password
      - SPRING_SHOW_SQL=false
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - JWT_SECRET=YourVeryLongAndSecureSecretKeyHere_Replace_This_With_Actual_Secret
      - JWT_EXPIRATION=86400000
      - STORE_OF_VALUE_SERVICE_URL=http://store-of-value-service:8083
      - AUTH_SERVICE_URL=http://profile-service:8081
      - AUTH_SERVICE_USERNAME=testadmin
      - AUTH_SERVICE_PASSWORD=Password123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=password
    depends_on:
      - transactions-db
      - rabbitmq
      - store-of-value-service
      - profile-service
      - redis

  # Transactions Database
  transactions-db:
    image: postgres:14
    container_name: transactions-db
    ports:
      - "5435:5432"
    environment:
      POSTGRES_DB: transactionsdb
      POSTGRES_USER: transactions_user
      POSTGRES_PASSWORD: transactions_password
    volumes:
      - transactions-data:/var/lib/postgresql/data

  # Events Service
  events-service:
    build:
      context: ./events-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    environment:
      - SERVER_PORT=8084
      - SPRING_DATASOURCE_URL=jdbc:postgresql://events-db:5432/eventsdb
      - SPRING_DATASOURCE_USERNAME=events_user
      - SPRING_DATASOURCE_PASSWORD=events_password
      - SPRING_SHOW_SQL=true
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - AUTH_SERVICE_URL=http://profile-service:8081
      - AUTH_SERVICE_USERNAME=testadmin
      - AUTH_SERVICE_PASSWORD=Password123
    depends_on:
      - events-db
      - rabbitmq
      - profile-service

  # Events Database
  events-db:
    image: postgres:14
    container_name: events-db
    ports:
      - "5436:5432"
    environment:
      POSTGRES_DB: eventsdb
      POSTGRES_USER: events_user
      POSTGRES_PASSWORD: events_password
    volumes:
      - events-data:/var/lib/postgresql/data

# Volumes for persistence
volumes:
  profile-data:
  accounts-data:
  transactions-data:
  events-data:
  rabbitmq-data:
  redis-data:

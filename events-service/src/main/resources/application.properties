spring.application.name=events-service
server.port=${SERVER_PORT:8084}

#spring.datasource.url=${SPRING_DATASOURCE_URL}
#spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
#spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=${SPRING_SHOW_SQL:true}
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# RabbitMQ Configuration
spring.rabbitmq.host=${RABBITMQ_HOST:rabbitmq}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}

# Service URLs
service.auth.url=${AUTH_SERVICE_URL:http://profile-service:8081}
service.auth.username=${AUTH_SERVICE_USERNAME:testadmin}
service.auth.password=${AUTH_SERVICE_PASSWORD:password123}

spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5436/eventsdb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:events_user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:events_password}

# OpenAPI/Swagger Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.syntaxHighlight.activated=true

# JWT Configuration
# IMPORTANT: Use the SAME strong secret key as the service that ISSUES the tokens (e.g., profile-service)
app.jwt.secret=${JWT_SECRET:YourVeryLongAndSecureSecretKeyHere_Replace_This_With_Actual_Secret}
app.jwt.expirationMs=${JWT_EXPIRATION:86400000}


